# -*- coding: utf-8 -*-
"""Profissao Analista de dados M18 Exercicio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_XQKh80NR0Vl-wdeFY5Nz_LtCKtwk3N4

<img src="https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png" alt="ebac-logo">

---

# **Módulo** | Análise de Dados: Controle de Versão II
Caderno de **Exercícios**<br>
Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)

---

# **Tópicos**

<ol type="1">
  <li>Adicionar e salvar;</li>
  <li>Visualizar e reverter;</li>
  <li>Persistir e atualizar.</li>
</ol>

---

# **Exercícios**

## 1\. Setup

Para realizar os exercicios vamos configurar o `git` e trazer o projeto do GitHub para a a máquina virtual do Google Colab (ou na sua máquina local, as instruções são as mesmas). Para tanto, replique as atividades expostas na aula 1 deste módulo.

### **1.1. Autenticação**

Nesta etapa, vamos configura o `git` com suas credenciais.
"""

import os

username = "<seu-usuario-git>" # insira o seu nome de usuário do git
os.environ["GITHUB_USER"] = username

!git config --global user.name "${GITHUB_USER}"

import os
from getpass import getpass

usermail = getpass()
os.environ["GITHUB_MAIL"] = usermail

!git config --global user.email "${GITHUB_MAIL}"

import os
from getpass import getpass

usertoken = getpass()
os.environ["GITHUB_TOKEN"] = usertoken

"""### **1.2. Projeto**

Nesta etapa, vamos trazer o projeto do GitHub para máquina local.
"""

!git clone https://github.com/EDVADMBD/FUTEBOL

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/FUTEBOL

"""---

## 2\. Preço da gasolina

O código abaixo gera um arquivo com o preço médio de venda da gasolina na cidade de São Paulo nos 10 primeiros dias de Julho de 2021.
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile gasolina.csv
# dia,venda
# 1,5.11
# 2,4.99
# 3,5.02
# 4,5.21
# 5,5.07
# 6,5.09
# 7,5.13
# 8,5.12
# 9,4.94
# 10,5.03

"""### **2.1. Desenvolvimento**

Gere uma gráfico de linha utilizando os dados do arquivo `gasolina.csv` com o dia no eixo `x`
 e o seu preço no eixo `y` utilizando os pacotes Python de sua preferência, como o Pandas e o Seaborn. Salve o gráfico no arquivo `gasolina.png` e o seu código Python de geração no arquivo `gasolina.py`.
"""

# código de geração do gráfico
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Carregar os dados do arquivo CSV
file_path = 'gasolina.csv'  # Corrected file name, assuming it's in the same directory
data = pd.read_csv(file_path)

# Criar o gráfico de linha
plt.figure(figsize=(10, 6))
sns.lineplot(data=data, x='dia', y='venda')

# Adicionar título e rótulos
plt.title('Preço da Gasolina por Dia')
plt.xlabel('Dia')
plt.ylabel('Preço')

# Salvar o gráfico em um arquivo PNG
plt.savefig('gasolina.png')

"""### **2.2. Git**

Utilizando os comandos do `git`, adicione e "commite" os arquivos gerados (base, código Python e gráfico).
"""

# comandos git para adicionar e commitar os arquivos
# Inicialize o repositório Git, caso ainda não esteja inicializado
!git init
!git add gasolina (1).csv gasolina.py gasolina.png

# Faça o commit dos arquivos
!git commit -m "Adicionando arquivos do projeto"
!git commit -m "Adiciona arquivos de dados, código Python e gráfico de preço da gasolina"

"""### **2.3. Github**

Utilizando os comandos do `git`, envie o seu commit para o GitHub.
"""

!git init
!git add gasolina.csv gasolina.py gasolina.png

!git remote add origin https://github.com/EDVADMBD/FUTEBOL/content/FUTEBOL/.git/

"""---

## 3\. Arquivo README.md

O arquivo README.md é a porta de entrada do seu projeto, é ele que será renderizado quando o seu projeto for acessado, portanto, é importante que ele esteja bem escrito. Alguns exemplos:

- [Pandas](https://github.com/pandas-dev/pandas);
 - [Seaborn](https://github.com/mwaskom/seaborn);
 - [Spark Cluster on Docker](https://github.com/cluster-apps-on-docker/spark-standalone-cluster-on-docker), esse projeto é meu! :)

### **3.1. Desenvolvimento**

Altere o arquivo README.md com informações sobre seu repositório, inclua um título e uma breve descrição do repositório (no mínimo).

> **Dica**: o README.md pode ser configurado utilizando o padrão **markdown**, o mesmo que utilizamos nas células de texto aqui no Google Colab.

### **3.2. Git**

Utilizando os comandos do `git`, adicione e "commite" as alterações no arquivo `README.md`.
"""

# comandos git para adicionar e commitar os arquivos
# Adicionar o arquivo README.md ao stage
!git add README.md
# Fazer o commit das alterações
!git add README.md
!git commit -m "Atualizando o README.md"
!git commit -m "Adiciona README.md com descrição do projeto"
!git push

!git push -u  /content/FUTEBOL

"""### **3.3. Github**

Utilizando os comandos do `git`, envie o seu commit para o GitHub.
"""

# comandos git para enviar o commit para o GitHub
# Adicionar o arquivo README.md ao stage
!git add README.md

# Fazer o commit das alterações
!git commit -m "Update README.md"
!git commit -m "Atualização do README.md"

# Enviar o commit para o GitHub
!git add .
!git commit -m "Adiciona README.md com descrição do projeto"
!git push /content/FUTEBOL
!git push -u  /content/FUTEBOL